##
##  © Copyright 2022 – 2023 Advanced Micro Devices, Inc. All rights reserved.
##
##  Licensed under the Apache License, Version 2.0 (the "License");
##  you may not use this file except in compliance with the License.
##  You may obtain a copy of the License at
##
##  http://www.apache.org/licenses/LICENSE-2.0
##
##  Unless required by applicable law or agreed to in writing, software
##  distributed under the License is distributed on an "AS IS" BASIS,
##  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
##  See the License for the specific language governing permissions and
##  limitations under the License.
##
class Node(object):
    def __init__(self, vaip_pass, graph, node_input):
        self._vaip_pass = vaip_pass
        self._graph = graph
        self._node_input = node_input

    def const_data(self):
        return self._node_input.const_data(self._vaip_pass, self._graph)

    def create_const(self, data):
        self._node_input.node().create_const(self._vaip_pass, data)

    def get_consumers(self):
        return [
            Node(self._vaip_pass, self._graph, ni)
            for ni in self._node_input.node_arg().consumers(self._graph)
        ]

    def op_type(self):
        return self._node_input.node().op_type()

    def shape(self):
        return self._node_input.node_arg().shape()

    def attr(self, attr_name):
        return self._node_input.node().attr(attr_name)

    def as_cpp_node(self):
        return self._node_input.node()

    def as_cpp_node_arg(self):
        return self._node_input.node_arg()

    def as_cpp_node_input(self):
        return self._node_input

    def __str__(self):
        if self.as_cpp_node():
            return str(self.as_cpp_node())
        return str(self.as_cpp_node_arg())
